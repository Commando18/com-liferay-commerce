/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.liferay.commerce.product.model.impl;

import aQute.bnd.annotation.ProviderType;

import com.liferay.commerce.product.model.CPRuleCommerceAccountGroupRel;
import com.liferay.commerce.product.model.CPRuleCommerceAccountGroupRelModel;
import com.liferay.commerce.product.model.CPRuleCommerceAccountGroupRelSoap;

import com.liferay.expando.kernel.model.ExpandoBridge;
import com.liferay.expando.kernel.util.ExpandoBridgeFactoryUtil;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.PortalException;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.ModelWrapper;
import com.liferay.portal.kernel.model.User;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.service.ServiceContext;
import com.liferay.portal.kernel.service.UserLocalServiceUtil;
import com.liferay.portal.kernel.util.DateUtil;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the CPRuleCommerceAccountGroupRel service. Represents a row in the &quot;CPRuleCommerceAccountGroupRel&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link CPRuleCommerceAccountGroupRelModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link CPRuleCommerceAccountGroupRelImpl}.
 * </p>
 *
 * @author Marco Leo
 * @see CPRuleCommerceAccountGroupRelImpl
 * @see CPRuleCommerceAccountGroupRel
 * @see CPRuleCommerceAccountGroupRelModel
 * @generated
 */
@JSON(strict = true)
@ProviderType
public class CPRuleCommerceAccountGroupRelModelImpl extends BaseModelImpl<CPRuleCommerceAccountGroupRel>
	implements CPRuleCommerceAccountGroupRelModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a cp rule commerce account group rel model instance should use the {@link CPRuleCommerceAccountGroupRel} interface instead.
	 */
	public static final String TABLE_NAME = "CPRuleCommerceAccountGroupRel";
	public static final Object[][] TABLE_COLUMNS = {
			{ "CPRuleCAccountGroupRelId", Types.BIGINT },
			{ "groupId", Types.BIGINT },
			{ "companyId", Types.BIGINT },
			{ "userId", Types.BIGINT },
			{ "userName", Types.VARCHAR },
			{ "createDate", Types.TIMESTAMP },
			{ "modifiedDate", Types.TIMESTAMP },
			{ "CPRuleId", Types.BIGINT },
			{ "commerceAccountGroupId", Types.BIGINT }
		};
	public static final Map<String, Integer> TABLE_COLUMNS_MAP = new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("CPRuleCAccountGroupRelId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("groupId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("companyId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("userId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("userName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("createDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("modifiedDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("CPRuleId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("commerceAccountGroupId", Types.BIGINT);
	}

	public static final String TABLE_SQL_CREATE = "create table CPRuleCommerceAccountGroupRel (CPRuleCAccountGroupRelId LONG not null primary key,groupId LONG,companyId LONG,userId LONG,userName VARCHAR(75) null,createDate DATE null,modifiedDate DATE null,CPRuleId LONG,commerceAccountGroupId LONG)";
	public static final String TABLE_SQL_DROP = "drop table CPRuleCommerceAccountGroupRel";
	public static final String ORDER_BY_JPQL = " ORDER BY cpRuleCommerceAccountGroupRel.createDate DESC";
	public static final String ORDER_BY_SQL = " ORDER BY CPRuleCommerceAccountGroupRel.createDate DESC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.commerce.product.service.util.ServiceProps.get(
				"value.object.entity.cache.enabled.com.liferay.commerce.product.model.CPRuleCommerceAccountGroupRel"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.commerce.product.service.util.ServiceProps.get(
				"value.object.finder.cache.enabled.com.liferay.commerce.product.model.CPRuleCommerceAccountGroupRel"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.commerce.product.service.util.ServiceProps.get(
				"value.object.column.bitmask.enabled.com.liferay.commerce.product.model.CPRuleCommerceAccountGroupRel"),
			true);
	public static final long CPRULEID_COLUMN_BITMASK = 1L;
	public static final long COMMERCEACCOUNTGROUPID_COLUMN_BITMASK = 2L;
	public static final long CREATEDATE_COLUMN_BITMASK = 4L;

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static CPRuleCommerceAccountGroupRel toModel(
		CPRuleCommerceAccountGroupRelSoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		CPRuleCommerceAccountGroupRel model = new CPRuleCommerceAccountGroupRelImpl();

		model.setCPRuleCommerceAccountGroupRelId(soapModel.getCPRuleCommerceAccountGroupRelId());
		model.setGroupId(soapModel.getGroupId());
		model.setCompanyId(soapModel.getCompanyId());
		model.setUserId(soapModel.getUserId());
		model.setUserName(soapModel.getUserName());
		model.setCreateDate(soapModel.getCreateDate());
		model.setModifiedDate(soapModel.getModifiedDate());
		model.setCPRuleId(soapModel.getCPRuleId());
		model.setCommerceAccountGroupId(soapModel.getCommerceAccountGroupId());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<CPRuleCommerceAccountGroupRel> toModels(
		CPRuleCommerceAccountGroupRelSoap[] soapModels) {
		if (soapModels == null) {
			return null;
		}

		List<CPRuleCommerceAccountGroupRel> models = new ArrayList<CPRuleCommerceAccountGroupRel>(soapModels.length);

		for (CPRuleCommerceAccountGroupRelSoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.commerce.product.service.util.ServiceProps.get(
				"lock.expiration.time.com.liferay.commerce.product.model.CPRuleCommerceAccountGroupRel"));

	public CPRuleCommerceAccountGroupRelModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _CPRuleCommerceAccountGroupRelId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setCPRuleCommerceAccountGroupRelId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _CPRuleCommerceAccountGroupRelId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return CPRuleCommerceAccountGroupRel.class;
	}

	@Override
	public String getModelClassName() {
		return CPRuleCommerceAccountGroupRel.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("CPRuleCommerceAccountGroupRelId",
			getCPRuleCommerceAccountGroupRelId());
		attributes.put("groupId", getGroupId());
		attributes.put("companyId", getCompanyId());
		attributes.put("userId", getUserId());
		attributes.put("userName", getUserName());
		attributes.put("createDate", getCreateDate());
		attributes.put("modifiedDate", getModifiedDate());
		attributes.put("CPRuleId", getCPRuleId());
		attributes.put("commerceAccountGroupId", getCommerceAccountGroupId());

		attributes.put("entityCacheEnabled", isEntityCacheEnabled());
		attributes.put("finderCacheEnabled", isFinderCacheEnabled());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long CPRuleCommerceAccountGroupRelId = (Long)attributes.get(
				"CPRuleCommerceAccountGroupRelId");

		if (CPRuleCommerceAccountGroupRelId != null) {
			setCPRuleCommerceAccountGroupRelId(CPRuleCommerceAccountGroupRelId);
		}

		Long groupId = (Long)attributes.get("groupId");

		if (groupId != null) {
			setGroupId(groupId);
		}

		Long companyId = (Long)attributes.get("companyId");

		if (companyId != null) {
			setCompanyId(companyId);
		}

		Long userId = (Long)attributes.get("userId");

		if (userId != null) {
			setUserId(userId);
		}

		String userName = (String)attributes.get("userName");

		if (userName != null) {
			setUserName(userName);
		}

		Date createDate = (Date)attributes.get("createDate");

		if (createDate != null) {
			setCreateDate(createDate);
		}

		Date modifiedDate = (Date)attributes.get("modifiedDate");

		if (modifiedDate != null) {
			setModifiedDate(modifiedDate);
		}

		Long CPRuleId = (Long)attributes.get("CPRuleId");

		if (CPRuleId != null) {
			setCPRuleId(CPRuleId);
		}

		Long commerceAccountGroupId = (Long)attributes.get(
				"commerceAccountGroupId");

		if (commerceAccountGroupId != null) {
			setCommerceAccountGroupId(commerceAccountGroupId);
		}
	}

	@JSON
	@Override
	public long getCPRuleCommerceAccountGroupRelId() {
		return _CPRuleCommerceAccountGroupRelId;
	}

	@Override
	public void setCPRuleCommerceAccountGroupRelId(
		long CPRuleCommerceAccountGroupRelId) {
		_CPRuleCommerceAccountGroupRelId = CPRuleCommerceAccountGroupRelId;
	}

	@JSON
	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		_groupId = groupId;
	}

	@JSON
	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		_companyId = companyId;
	}

	@JSON
	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		_userId = userId;
	}

	@Override
	public String getUserUuid() {
		try {
			User user = UserLocalServiceUtil.getUserById(getUserId());

			return user.getUuid();
		}
		catch (PortalException pe) {
			return "";
		}
	}

	@Override
	public void setUserUuid(String userUuid) {
	}

	@JSON
	@Override
	public String getUserName() {
		if (_userName == null) {
			return "";
		}
		else {
			return _userName;
		}
	}

	@Override
	public void setUserName(String userName) {
		_userName = userName;
	}

	@JSON
	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		_columnBitmask = -1L;

		_createDate = createDate;
	}

	@JSON
	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	public boolean hasSetModifiedDate() {
		return _setModifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_setModifiedDate = true;

		_modifiedDate = modifiedDate;
	}

	@JSON
	@Override
	public long getCPRuleId() {
		return _CPRuleId;
	}

	@Override
	public void setCPRuleId(long CPRuleId) {
		_columnBitmask |= CPRULEID_COLUMN_BITMASK;

		if (!_setOriginalCPRuleId) {
			_setOriginalCPRuleId = true;

			_originalCPRuleId = _CPRuleId;
		}

		_CPRuleId = CPRuleId;
	}

	public long getOriginalCPRuleId() {
		return _originalCPRuleId;
	}

	@JSON
	@Override
	public long getCommerceAccountGroupId() {
		return _commerceAccountGroupId;
	}

	@Override
	public void setCommerceAccountGroupId(long commerceAccountGroupId) {
		_columnBitmask |= COMMERCEACCOUNTGROUPID_COLUMN_BITMASK;

		if (!_setOriginalCommerceAccountGroupId) {
			_setOriginalCommerceAccountGroupId = true;

			_originalCommerceAccountGroupId = _commerceAccountGroupId;
		}

		_commerceAccountGroupId = commerceAccountGroupId;
	}

	public long getOriginalCommerceAccountGroupId() {
		return _originalCommerceAccountGroupId;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(getCompanyId(),
			CPRuleCommerceAccountGroupRel.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public CPRuleCommerceAccountGroupRel toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (CPRuleCommerceAccountGroupRel)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		CPRuleCommerceAccountGroupRelImpl cpRuleCommerceAccountGroupRelImpl = new CPRuleCommerceAccountGroupRelImpl();

		cpRuleCommerceAccountGroupRelImpl.setCPRuleCommerceAccountGroupRelId(getCPRuleCommerceAccountGroupRelId());
		cpRuleCommerceAccountGroupRelImpl.setGroupId(getGroupId());
		cpRuleCommerceAccountGroupRelImpl.setCompanyId(getCompanyId());
		cpRuleCommerceAccountGroupRelImpl.setUserId(getUserId());
		cpRuleCommerceAccountGroupRelImpl.setUserName(getUserName());
		cpRuleCommerceAccountGroupRelImpl.setCreateDate(getCreateDate());
		cpRuleCommerceAccountGroupRelImpl.setModifiedDate(getModifiedDate());
		cpRuleCommerceAccountGroupRelImpl.setCPRuleId(getCPRuleId());
		cpRuleCommerceAccountGroupRelImpl.setCommerceAccountGroupId(getCommerceAccountGroupId());

		cpRuleCommerceAccountGroupRelImpl.resetOriginalValues();

		return cpRuleCommerceAccountGroupRelImpl;
	}

	@Override
	public int compareTo(
		CPRuleCommerceAccountGroupRel cpRuleCommerceAccountGroupRel) {
		int value = 0;

		value = DateUtil.compareTo(getCreateDate(),
				cpRuleCommerceAccountGroupRel.getCreateDate());

		value = value * -1;

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof CPRuleCommerceAccountGroupRel)) {
			return false;
		}

		CPRuleCommerceAccountGroupRel cpRuleCommerceAccountGroupRel = (CPRuleCommerceAccountGroupRel)obj;

		long primaryKey = cpRuleCommerceAccountGroupRel.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public boolean isEntityCacheEnabled() {
		return ENTITY_CACHE_ENABLED;
	}

	@Override
	public boolean isFinderCacheEnabled() {
		return FINDER_CACHE_ENABLED;
	}

	@Override
	public void resetOriginalValues() {
		CPRuleCommerceAccountGroupRelModelImpl cpRuleCommerceAccountGroupRelModelImpl =
			this;

		cpRuleCommerceAccountGroupRelModelImpl._setModifiedDate = false;

		cpRuleCommerceAccountGroupRelModelImpl._originalCPRuleId = cpRuleCommerceAccountGroupRelModelImpl._CPRuleId;

		cpRuleCommerceAccountGroupRelModelImpl._setOriginalCPRuleId = false;

		cpRuleCommerceAccountGroupRelModelImpl._originalCommerceAccountGroupId = cpRuleCommerceAccountGroupRelModelImpl._commerceAccountGroupId;

		cpRuleCommerceAccountGroupRelModelImpl._setOriginalCommerceAccountGroupId = false;

		cpRuleCommerceAccountGroupRelModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<CPRuleCommerceAccountGroupRel> toCacheModel() {
		CPRuleCommerceAccountGroupRelCacheModel cpRuleCommerceAccountGroupRelCacheModel =
			new CPRuleCommerceAccountGroupRelCacheModel();

		cpRuleCommerceAccountGroupRelCacheModel.CPRuleCommerceAccountGroupRelId = getCPRuleCommerceAccountGroupRelId();

		cpRuleCommerceAccountGroupRelCacheModel.groupId = getGroupId();

		cpRuleCommerceAccountGroupRelCacheModel.companyId = getCompanyId();

		cpRuleCommerceAccountGroupRelCacheModel.userId = getUserId();

		cpRuleCommerceAccountGroupRelCacheModel.userName = getUserName();

		String userName = cpRuleCommerceAccountGroupRelCacheModel.userName;

		if ((userName != null) && (userName.length() == 0)) {
			cpRuleCommerceAccountGroupRelCacheModel.userName = null;
		}

		Date createDate = getCreateDate();

		if (createDate != null) {
			cpRuleCommerceAccountGroupRelCacheModel.createDate = createDate.getTime();
		}
		else {
			cpRuleCommerceAccountGroupRelCacheModel.createDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			cpRuleCommerceAccountGroupRelCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			cpRuleCommerceAccountGroupRelCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		cpRuleCommerceAccountGroupRelCacheModel.CPRuleId = getCPRuleId();

		cpRuleCommerceAccountGroupRelCacheModel.commerceAccountGroupId = getCommerceAccountGroupId();

		return cpRuleCommerceAccountGroupRelCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(19);

		sb.append("{CPRuleCommerceAccountGroupRelId=");
		sb.append(getCPRuleCommerceAccountGroupRelId());
		sb.append(", groupId=");
		sb.append(getGroupId());
		sb.append(", companyId=");
		sb.append(getCompanyId());
		sb.append(", userId=");
		sb.append(getUserId());
		sb.append(", userName=");
		sb.append(getUserName());
		sb.append(", createDate=");
		sb.append(getCreateDate());
		sb.append(", modifiedDate=");
		sb.append(getModifiedDate());
		sb.append(", CPRuleId=");
		sb.append(getCPRuleId());
		sb.append(", commerceAccountGroupId=");
		sb.append(getCommerceAccountGroupId());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(31);

		sb.append("<model><model-name>");
		sb.append(
			"com.liferay.commerce.product.model.CPRuleCommerceAccountGroupRel");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>CPRuleCommerceAccountGroupRelId</column-name><column-value><![CDATA[");
		sb.append(getCPRuleCommerceAccountGroupRelId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>groupId</column-name><column-value><![CDATA[");
		sb.append(getGroupId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>companyId</column-name><column-value><![CDATA[");
		sb.append(getCompanyId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userId</column-name><column-value><![CDATA[");
		sb.append(getUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userName</column-name><column-value><![CDATA[");
		sb.append(getUserName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createDate</column-name><column-value><![CDATA[");
		sb.append(getCreateDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
		sb.append(getModifiedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>CPRuleId</column-name><column-value><![CDATA[");
		sb.append(getCPRuleId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>commerceAccountGroupId</column-name><column-value><![CDATA[");
		sb.append(getCommerceAccountGroupId());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static final ClassLoader _classLoader = CPRuleCommerceAccountGroupRel.class.getClassLoader();
	private static final Class<?>[] _escapedModelInterfaces = new Class[] {
			CPRuleCommerceAccountGroupRel.class, ModelWrapper.class
		};
	private long _CPRuleCommerceAccountGroupRelId;
	private long _groupId;
	private long _companyId;
	private long _userId;
	private String _userName;
	private Date _createDate;
	private Date _modifiedDate;
	private boolean _setModifiedDate;
	private long _CPRuleId;
	private long _originalCPRuleId;
	private boolean _setOriginalCPRuleId;
	private long _commerceAccountGroupId;
	private long _originalCommerceAccountGroupId;
	private boolean _setOriginalCommerceAccountGroupId;
	private long _columnBitmask;
	private CPRuleCommerceAccountGroupRel _escapedModel;
}